package vistas;

import javax.swing.*;

import com.toedter.calendar.JDateChooser;
import java.awt.event.ActionListener;
import java.util.Date;
import java.awt.event.ActionEvent;
import clases.*;
import utils.Tool;
import arreglos.*;
import javax.swing.border.TitledBorder;
import java.awt.event.KeyListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;

@SuppressWarnings("serial")
public class FrmPago extends JInternalFrame implements ActionListener, KeyListener, MouseListener{
	private JLabel lblCodigo;
	private JTextField txtCodigo;
	private JTextField txtAbono;
	private JLabel lblMonto;
	private JLabel lblCliente;
	private JComboBox <Object> cboCliente;
	private JDateChooser dcFecha;
	private JLabel lblFecha;
	private JButton btnAgregar;
	private JButton btnModificar;
	private ArregloPago arrPago;
	private JComboBox <Object> cboMedioPago;
	private JLabel lblMedioPago;
	private JPanel panelPago;
	private JPanel panelCliente;
	private JLabel lblNombre;
	private JTextField txtNombre_cliente;
	private JTextField txtApellido_cliente;
	private JLabel lblApellido;
	private JTextField txtDeuda_cliente;
	private JLabel lblDeuda;
	
	
	
	public static void main(String [] args) {
		
		FrmPago form = new FrmPago();
		form.setVisible(true);
		
	}
	
	public FrmPago() {
		
		setTitle("Pagos realizados");
		setBounds(100,100,608,310);
		//setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		setClosable(true);
		setMaximizable(true);
		setIconifiable(true);
		
		this.getContentPane().setLayout(null);
		
		arrPago = new ArregloPago();
		
		btnAgregar = new JButton("Agregar");
		btnAgregar.addActionListener(this);
		btnAgregar.setBounds(368, 239, 89, 23);
		getContentPane().add(btnAgregar);
		
		btnModificar = new JButton("Modificar");
		btnModificar.addActionListener(this);
		btnModificar.setBounds(494, 239, 89, 23);
		getContentPane().add(btnModificar);
		
		panelPago = new JPanel();
		panelPago.setBorder(new TitledBorder(null, "PAGO", TitledBorder.LEADING, TitledBorder.TOP, null, null));
		panelPago.setBounds(10, 11, 457, 112);
		getContentPane().add(panelPago);
		panelPago.setLayout(null);
		
		lblCodigo = new JLabel("CODIGO");
		lblCodigo.setBounds(10, 18, 46, 14);
		panelPago.add(lblCodigo);
		
		txtCodigo = new JTextField();
		txtCodigo.setBounds(10, 36, 86, 20);
		panelPago.add(txtCodigo);
		txtCodigo.setColumns(10);
		
		txtAbono = new JTextField();
		txtAbono.setBounds(10, 80, 86, 20);
		panelPago.add(txtAbono);
		txtAbono.setColumns(10);
		
		lblMonto = new JLabel("MONTO");
		lblMonto.setBounds(10, 62, 46, 14);
		panelPago.add(lblMonto);
		
		lblCliente = new JLabel("CLIENTE");
		lblCliente.setBounds(117, 17, 77, 14);
		panelPago.add(lblCliente);
		
		cboCliente = new JComboBox<Object>();
		cboCliente.addMouseListener(this);
		cboCliente.addKeyListener(this);
		cboCliente.setBounds(117, 34, 160, 22);
		panelPago.add(cboCliente);
		
		dcFecha = new JDateChooser();
		dcFecha.setBounds(301, 36, 124, 20);
		panelPago.add(dcFecha);
		
		lblFecha = new JLabel("FECHA");
		lblFecha.setBounds(301, 18, 46, 14);
		panelPago.add(lblFecha);
		
		cboMedioPago = new JComboBox <Object>();
		cboMedioPago.setBounds(117, 79, 138, 22);
		panelPago.add(cboMedioPago);
		
		lblMedioPago = new JLabel("MEDIO DE PAGO");
		lblMedioPago.setBounds(117, 62, 104, 14);
		panelPago.add(lblMedioPago);
		
		panelCliente = new JPanel();
		panelCliente.setBounds(10, 134, 437, 84);
		panelCliente.setBorder(new TitledBorder(null,"CLIENTE"));
		panelCliente.setLayout(null);
		getContentPane().add(panelCliente);
		
		lblNombre = new JLabel("NOMBRE");
		lblNombre.setBounds(10, 25, 70, 14);
		panelCliente.add(lblNombre);
		
		txtNombre_cliente = new JTextField();
		txtNombre_cliente.setBounds(10, 41, 115, 20);
		panelCliente.add(txtNombre_cliente);
		txtNombre_cliente.setColumns(10);
		
		txtApellido_cliente = new JTextField();
		txtApellido_cliente.setColumns(10);
		txtApellido_cliente.setBounds(150, 41, 131, 20);
		panelCliente.add(txtApellido_cliente);
		
		lblApellido = new JLabel("APELLIDO");
		lblApellido.setBounds(150, 25, 86, 14);
		panelCliente.add(lblApellido);
		
		txtDeuda_cliente = new JTextField();
		txtDeuda_cliente.setColumns(10);
		txtDeuda_cliente.setBounds(323, 41, 86, 20);
		panelCliente.add(txtDeuda_cliente);
		
		lblDeuda = new JLabel("DEUDA");
		lblDeuda.setBounds(323, 25, 56, 14);
		panelCliente.add(lblDeuda);
		
		arranque();
		
	}
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnModificar) {
			actionPerformedBtnModificar(e);
		}
		if (e.getSource() == btnAgregar) {
			actionPerformedBtnAgregar(e);
		}
	}
	protected void actionPerformedBtnAgregar(ActionEvent e) {
		
		String codigo = leerCodigo();
		String cliente = leerCliente();
		String fecha = leerFecha ();
		double monto = leerMonto();
		String medioPago = leerMedioPago();
		
		
		arrPago.adicionar(new Pago(codigo,cliente,monto,fecha,medioPago));
		Tool.mensajeExito(this, "Registro Exitoso");
		arrPago.gabrarPago();
		
	}


	protected void actionPerformedBtnModificar(ActionEvent e) {
	}
	
	//Metodos de ingreso
	
	private String leerMedioPago() {
		return cboMedioPago.getSelectedItem().toString();
	}
	
	private double leerMonto() {
		return Double.parseDouble(txtAbono.getText());
	}

	private String leerFecha() {
		return Tool.sdf.format(dcFecha.getDate());
	}

	private String leerCliente() {
		String res = null;
		
		ArregloCliente arrCliente = new ArregloCliente();
		
		for (int i=0;i<arrCliente.tamaño();i++) {
			if(arrCliente.obtener(i).getNom_cliente().equals(cboCliente.getSelectedItem())) {
				res = arrCliente.obtener(i).getId_cliente();
			}
		}
		return res;
	}

	private String leerCodigo() {
		return txtCodigo.getText();
	}
	
	//Metodos adicionales
	
	void arranque() {
		
		llenarCboCliente();
		cargarMedioPago();
		txtCodigo.setText("" + correlativo());
		dcFecha.setDate(new Date());
	}
	
	void llenarCboCliente (){
		
		ArregloCliente arrCliente  = new ArregloCliente();
		
		cboCliente.removeAllItems();
		
		cboCliente.addItem("ELIGA");
		
		for (int i=0;i<arrCliente.tamaño();i++) {
			 cboCliente.addItem(arrCliente.obtener(i).getNom_cliente());
		}
	}
	
	int correlativo() {
		if(arrPago.tamaño()==0) {
			return 1;
		}else {
			return Integer.parseInt(arrPago.obtener(arrPago.tamaño()-1).getId_pago())+1;
		}
	}
	
	void limpiar () {
		txtCodigo.setText("" + correlativo());
		cboCliente.setSelectedIndex(-1);
		dcFecha.setDate(new Date());
		txtAbono.setText("");
		
	}
	
	void cargarMedioPago() {
		
		String[] medioPago = {"EFECTIVO","YAPE","PLIN","TRANFERENCIA"};
		
		cboMedioPago.setModel(new DefaultComboBoxModel(medioPago));
		
	}
	
	void mostrarCliente() {
		String idCliente = leerCliente();
		
		Cliente objCliente = new ArregloCliente().buscar(idCliente);
		
		double deudaAcumulada = new ArregloDeuda().deudaTotal(idCliente) - new ArregloPago().pagoTotal(idCliente);
		
		txtNombre_cliente.setText(objCliente.getNom_cliente());
		txtApellido_cliente.setText(objCliente.getApe_cliente());
		txtDeuda_cliente.setText(deudaAcumulada + "");
		
	}
	//LLAVE LIBERADA DEL COMBO CLIENTE
	public void keyPressed(KeyEvent e) {
	}
	public void keyReleased(KeyEvent e) {
		if (e.getSource() == cboCliente) {
			keyReleasedCboCliente(e);
		}
	}
	public void keyTyped(KeyEvent e) {
	}
	protected void keyReleasedCboCliente(KeyEvent e) {
		mostrarCliente();
	}
	
	//MOUSE CLIKED DEL COMBO CLIENTE
	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == cboCliente) {
			mouseClickedCboCliente(e);
		}
	}
	public void mouseEntered(MouseEvent e) {
	}
	public void mouseExited(MouseEvent e) {
	}
	public void mousePressed(MouseEvent e) {
	}
	public void mouseReleased(MouseEvent e) {
	}
	protected void mouseClickedCboCliente(MouseEvent e) {
	}
}
