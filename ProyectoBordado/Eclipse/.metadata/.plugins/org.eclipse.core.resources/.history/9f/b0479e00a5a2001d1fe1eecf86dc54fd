package arreglos;

import java.util.*;
import java.io.*;
import clases.*;
import reuzables.Custom;

public class ArregloOrdenProduccion {

	private ArrayList<OrdenProduccion> arrEstiloOp;
	
	public ArregloOrdenProduccion() {
		arrEstiloOp = new ArrayList<OrdenProduccion>();
		cargarOrdenProduccion();
	}
	
	//METODOS BASICOS
	
	public int tamaño() {
		return arrEstiloOp.size();
	}
	
	public OrdenProduccion obtener(int i) {
		return arrEstiloOp.get(i);
	}
	
	public void adicionar (OrdenProduccion ordenProd) {
		arrEstiloOp.add(ordenProd);
	}
	
	public void eliminar (OrdenProduccion ordenProd) {
		arrEstiloOp.remove(ordenProd);
	}
	
	public OrdenProduccion buscar (int OP) {
		OrdenProduccion ordenProd=null;
	}
	
	//METODOS DE LECTURA Y ESCRITURA
	
	public void grabarOrdenProduccion() {
		PrintWriter pw = null;
		String texto;
		
		try {
			pw= new PrintWriter (new FileWriter("ordenProduccion.txt"));
			for (OrdenProduccion ordenProd:arrEstiloOp) {
				texto = ordenProd.getNroOp() + ";" +
						ordenProd.getCodCliente() + ";" +
						ordenProd.getCodEstilo();
				
				pw.println(texto);
			}
		}catch(Exception e) {
			Custom.mensajeError(null, "Error al grabar contenido");
		}finally {
			pw.close();
		}
	}
	
	public void cargarOrdenProduccion() {
		BufferedReader br;
		String linea;
		String[] texto;
		
		try {
			br = new BufferedReader (new FileReader("ordenProduccion.txt"));
			while((linea=br.readLine())!=null) {
				texto = linea.split(";");
				OrdenProduccion ordenProd = new OrdenProduccion(
						Integer.parseInt(texto[0]),
						Integer.parseInt(texto[1]),
						Integer.parseInt(texto[2])
						);
				arrEstiloOp.add(ordenProd);
			}
			br.close();
		}catch (Exception e) {
			Custom.mensajeError(null, "Error al cargar contenido");
		}
		
		
	}
}
