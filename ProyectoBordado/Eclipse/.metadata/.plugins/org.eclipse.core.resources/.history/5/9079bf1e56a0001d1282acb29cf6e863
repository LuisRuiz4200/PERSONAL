package vistas;

import javax.swing.*;
import java.awt.SystemColor;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseEvent;
import javax.swing.table.DefaultTableModel;
import clases.*;
import arreglos.*;

@SuppressWarnings("serial")
public class FrmOrdenProd extends JFrame implements ActionListener, MouseListener{
	private JPanel panelBtnMantener;
	private JButton btnAgregar;
	private JButton btnModificar;
	private JButton btnEliminar;
	private JLabel lblNroOP;
	private JTextField txtNroOP;
	private JLabel lblCodCliente;
	private JTable table;
	private JScrollPane scrollPane;
	private JLabel lblCodEstilo;
	private JComboBox<Object> cboCodEstilo;
	private JComboBox<Object> cboCodCliente;
	private DefaultTableModel modelo;
	private ArregloOrdenProduccion arrOP;
	
	
	public static void main (String[] args) {
		FrmOrdenProd ventana = new FrmOrdenProd();
		ventana.setVisible(true);
	}
	
	public FrmOrdenProd() {
		
		this.setTitle("ORDEN DE PRODUCCION");
		this.setBounds(0,0,429,326);
		this.setLocationRelativeTo(this);
		this.getContentPane().setLayout(null);
		
		panelBtnMantener = new JPanel();
		panelBtnMantener.setLayout(null);
		panelBtnMantener.setBackground(SystemColor.activeCaption);
		panelBtnMantener.setBounds(10, 170, 111, 106);
		getContentPane().add(panelBtnMantener);
		
		btnAgregar = new JButton("Agregar");
		btnAgregar.addActionListener(this);
		btnAgregar.setBounds(10, 11, 89, 23);
		panelBtnMantener.add(btnAgregar);
		
		btnModificar = new JButton("Modificar");
		btnModificar.addActionListener(this);
		btnModificar.setBounds(10, 39, 89, 23);
		panelBtnMantener.add(btnModificar);
		
		btnEliminar = new JButton("Eliminar");
		btnEliminar.addActionListener(this);
		btnEliminar.setBounds(10, 68, 89, 23);
		panelBtnMantener.add(btnEliminar);
		
		lblNroOP = new JLabel("Nro OP");
		lblNroOP.setBounds(10, 11, 67, 14);
		getContentPane().add(lblNroOP);
		
		txtNroOP = new JTextField();
		txtNroOP.setBounds(10, 27, 86, 20);
		getContentPane().add(txtNroOP);
		txtNroOP.setColumns(10);
		
		lblCodCliente = new JLabel("Cod. Cliente");
		lblCodCliente.setBounds(108, 11, 86, 14);
		getContentPane().add(lblCodCliente);
		
		scrollPane = new JScrollPane();
		scrollPane.setBounds(153, 59, 250, 217);
		getContentPane().add(scrollPane);
		
		table = new JTable();
		table.addMouseListener(this);
		scrollPane.setViewportView(table);
		
		lblCodEstilo = new JLabel("Cod. Estilo");
		lblCodEstilo.setBounds(204, 11, 94, 14);
		getContentPane().add(lblCodEstilo);
		
		cboCodEstilo = new JComboBox<Object>();
		cboCodEstilo.setBounds(204, 26, 199, 22);
		getContentPane().add(cboCodEstilo);
		
		cboCodCliente = new JComboBox<Object>();
		cboCodCliente.setBounds(106, 26, 94, 22);
		getContentPane().add(cboCodCliente);
		
		modelo = new DefaultTableModel();
		modelo.addColumn("NRO OP");
		modelo.addColumn("CLIENTE");
		modelo.addColumn("COLOR");
		table.setModel(modelo);
		
		arrOP = new ArregloOrdenProduccion();
		
		arranque();
	}
	
	
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnEliminar) {
			actionPerformedBtnEliminar(e);
		}
		if (e.getSource() == btnModificar) {
			actionPerformedBtnModificar(e);
		}
		if (e.getSource() == btnAgregar) {
			actionPerformedBtnAgregar(e);
		}
	}
	protected void actionPerformedBtnAgregar(ActionEvent e) {
		
		int nroOP = leerNroOP();
		int codCliente = leerCodCliente();
		int codEstilo = leerCodEstilo();
		
		OrdenProduccion OP = new OrdenProduccion(nroOP,codCliente,codEstilo);
		
		arrOP.adicionar(OP);
		arrOP.grabarOrdenProduccion();
		listarOP();
		
	}
	protected void actionPerformedBtnModificar(ActionEvent e) {
	}
	protected void actionPerformedBtnEliminar(ActionEvent e) {
	}
	public void mouseClicked(MouseEvent e) {
		if (e.getSource() == table) {
			mouseClickedTable(e);
		}
	}
	public void mouseEntered(MouseEvent e) {
	}
	public void mouseExited(MouseEvent e) {
	}
	public void mousePressed(MouseEvent e) {
	}
	public void mouseReleased(MouseEvent e) {
	}
	protected void mouseClickedTable(MouseEvent e) {
	}
	
	//METODOS DE ENTRADA
	
	private int leerNroOP() {
		int res =-1;
		
		res = Integer.parseInt(txtNroOP.getText().trim());
		
		return res;
	}
	
	private int leerCodCliente() {
		int res = -1;
		
		res = cboCodCliente.getSelectedIndex();
		
		return res;
	}
	
	private int leerCodEstilo() {
		int res =-1;
		
		res = cboCodEstilo.getSelectedIndex();
		
		return res;
	}
	
	
	
	//METODOS ADICIONALES
	private void arranque() {
		listarOP();
	}
	
	private void listarOP() {
		//INNER JOIN
		ArregloCliente arrCliente = new ArregloCliente ();
		ArregloEstiloOp arrEstiloOP = new ArregloEstiloOp();
		
		modelo.setRowCount(0);
		
		for(int i=0;i<arrOP.tamaño();i++) {
			Object[] x = {
					arrOP.obtener(i).getNroOp();
					arrOP.obtener(i).getCodCliente();
			};
			
		}
		
		
	}
}
